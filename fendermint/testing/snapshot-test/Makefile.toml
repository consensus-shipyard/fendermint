# cd fendermint/testing/snapshot-test
# - then -
# cargo make
# - or -
# cargo make setup
# cargo make test
# docker logs snapshot-fendermint
# cargo make teardown

extend = [
  { path = "../scripts/common.toml" },
]

env_files = [
  { path = "./scripts/snapshot.env" },
  { path = "../scripts/common.env" },
  { path = "../scripts/ci.env", profile = "ci" },
]

# Overriding the env file to enable snapshotting.
[tasks.test-data-env]
script = """
cat << EOF > ${TEST_DATA_DIR}/.env
FM_DB__HIST_SIZE=100
FM_SNAPSHOTS__ENABLED=true
FM_SNAPSHOTS__BLOCK_INTERVAL=10
FM_SNAPSHOTS__HIST_SIZE=10
FM_SNAPSHOTS__CHUNK_SIZE_BYTES=1048576
FM_SNAPSHOTS__SYNC_POLL_INTERVAL=10
EOF
"""

[tasks.test]
clear = true
dependencies = ["snapshot-wait", "snapshot-created", "fullnode-sync"]

# Wait enough time that some snapshots should be exported.
[tasks.snapshot-wait]
extend = "wait"
env = { "CARGO_MAKE_WAIT_MILLISECONDS" = "15000" }

# Check that some snapshots are being produced.
[tasks.snapshot-created]
script = """
FM_SNAPSHOTS_DIR=${TEST_DATA_DIR}/${NODE_NAME}/fendermint/snapshots
if [ -z "$(ls -A $FM_SNAPSOTS_DIR)" ]; then
   echo "ERROR: No snapshots created at $FM_SNAPSHOTS_DIR"
   exit 1
fi
"""


# Set up a full node that syncs with the default one, then stop it.
[tasks.fullnode-sync]
run_task = { name = [
  "fullnode-setup",
  "fullnode-test",
], fork = true, cleanup_task = "fullnode-teardown" }


[tasks.fullnode-setup]
dependencies = ["cometbft-export-node-id"]
env_files = [{ path = "./scripts/fullnode.env" }]
run_task = { name = [
  "test-node-dir",
  "cometbft-init",
  "fullnode-set-seed",
  "fullnode-copy-genesis",
  "fendermint-start",
  "cometbft-start",
  "cometbft-wait",
  "fendermint-logs",
  "cometbft-logs",
] }


# Set the persistent peer address to that of the default node-0.
[tasks.fullnode-set-seed]
env_files = [{ path = "./scripts/fullnode.env" }]
script = """
CMT_SEED_ID=$(cat $BASE_DIR/$SEED_NODE_NAME/node-id)
CMT_PERSISTENT_PEERS=$CMT_SEED_ID@$SEED_CMT_CONTAINER_NAME:26656
sed -i'' -e "s|persistent_peers = \\"\\"|persistent_peers = \\"$CMT_PERSISTENT_PEERS\\"|" $BASE_DIR/${NODE_NAME}/cometbft/config/config.toml
"""


# Get the genesis from node-0
[tasks.fullnode-copy-genesis]
env_files = [{ path = "./scripts/fullnode.env" }]
script = """
cp $BASE_DIR/${SEED_NODE_NAME}/cometbft/config/genesis.json \
   $BASE_DIR/${NODE_NAME}/cometbft/config/genesis.json
"""

# See if it managed to sync.
[tasks.fullnode-test]
env_files = [{ path = "./scripts/fullnode.env" }]
script = """
EARLIEST=$(curl -s localhost:${CMT_RPC_HOST_PORT}/status | jq -r ".result.sync_info.earliest_block_height")
LATEST=$(curl -s localhost:${CMT_RPC_HOST_PORT}/status | jq -r ".result.sync_info.latest_block_height")

if [ "$EARLIEST" = "$LATEST" ]; then
  echo "ERROR: The chain is not syncing!"
  exit 1
fi
"""


[tasks.fullnode-teardown]
env_files = [{ path = "./scripts/fullnode.env" }]
run_task = { name = [
  "cometbft-destroy",
  "fendermint-destroy",
  "test-node-dir-rm",
] }
