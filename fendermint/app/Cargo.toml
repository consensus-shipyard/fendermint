[package]
name = "fendermint_app"
description = "Tendermint ABCI++ Application to implement an IPLD+FVM enabled sidechain"
version = "0.1.0"
authors.workspace = true
edition.workspace = true
license.workspace = true

[dependencies]
anyhow = { workspace = true }
async-trait = { workspace = true }
clap = { workspace = true }
config = { workspace = true }
tokio = { workspace = true }
tendermint = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
hex = { workspace = true }
k256 = { workspace = true }

fendermint_abci = { path = "../abci" }
fendermint_storage = { path = "../storage" }
fendermint_rocksdb = { path = "../rocksdb" }
fendermint_vm_interpreter = { path = "../vm/interpreter", features = ["bundle"] }
fendermint_vm_message = { path = "../vm/message" }
fendermint_vm_genesis = { path = "../vm/genesis" }

cid = { workspace = true }
fvm = { workspace = true }
fvm_ipld_blockstore = { workspace = true }
fvm_ipld_car = { workspace = true }
fvm_ipld_encoding = { workspace = true }
fvm_shared = { workspace = true }

[dev-dependencies]
tempfile = { workspace = true }

# Load the same built-in actor bundle as the ref-fvm integration tests. We'll probably need built-in actors,
# for example to deploy Solidity code. We can compile Wasm actors and deploy them too, but certain functions
# in `ref-fvm` like looking up actor addresses depend on built-in actors like the `InitActor` maintaining state.
# NOTE: The following would add this as a dependency. The problem is that this makes it more difficult to compile
# the project because now when there is a new version of the FVM released, we also need a new version of the
# actor project to be released. In prod, we'd just load it from a file, so let's see if that works.
# We can build a bundle CAR with the Makefile.
# actors-v10 = { package = "fil_builtin_actors_bundle", git = "https://github.com/filecoin-project/builtin-actors", branch = "next" }
